import{_ as e,c as a,o as s,a as n}from"./app.5d2f7bc5.js";var o="/assets/github-action-flow.b2cd4fe8.svg",t="/assets/release-lifecycle.246ccf6b.svg",l="/assets/build-release-metadata.864c512e.svg";const f='{"title":"Create Application Release","description":"","frontmatter":{},"headers":[{"level":2,"title":"Release life cycle","slug":"release-life-cycle"},{"level":2,"title":"Checklist","slug":"checklist"},{"level":3,"title":"Update your local refs","slug":"update-your-local-refs"},{"level":2,"title":"Create version tag","slug":"create-version-tag"},{"level":2,"title":"Push tag to GitHub","slug":"push-tag-to-github"},{"level":2,"title":"Create a release on GitHub","slug":"create-a-release-on-github"},{"level":2,"title":"Deploy the application","slug":"deploy-the-application"}],"relativePath":"guide/kb/app-release-guide.md","lastUpdated":1664425815000}',r={name:"guide/kb/app-release-guide.md"},i=n('<h1 id="create-application-release" tabindex="-1">Create Application Release <a class="header-anchor" href="#create-application-release" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This document is currently in a &quot;Work in Progress&quot; stage.</p></div><p><img src="'+o+'" alt="github-action-flow"></p><h2 id="release-life-cycle" tabindex="-1">Release life cycle <a class="header-anchor" href="#release-life-cycle" aria-hidden="true">#</a></h2><p>This is the lifecycle of Frontend application:</p><p><img src="'+t+`" alt="release-lifecycle"></p><p>Read <a href="https://en.wikipedia.org/wiki/Software_release_life_cycle" target="_blank" rel="noopener noreferrer">Software release life cycle</a> for more information.</p><h2 id="checklist" tabindex="-1">Checklist <a class="header-anchor" href="#checklist" aria-hidden="true">#</a></h2><h3 id="update-your-local-refs" tabindex="-1">Update your local <code>refs</code> <a class="header-anchor" href="#update-your-local-refs" aria-hidden="true">#</a></h3><blockquote><p><strong>Note:</strong> The <code>tags</code> and <code>releases</code> must be create within <code>master/main</code>, <code>develop</code> or <code>release/*</code> branch.</p></blockquote><p>Please make sure to switch to the correct working branch before creating release. You can run this following command to switch between branches:</p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Switch to your desire branch</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git switch </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">main,develop</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create a release branch</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git switch -c release/</span><span style="color:#89DDFF;">*</span></span>
<span class="line"></span></code></pre></div><p>Before we can start, please make sure that your local <code>refs</code> is up-to-date by running the following commands:</p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ git fetch --all --prune</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git pull</span></span>
<span class="line"></span></code></pre></div><h2 id="create-version-tag" tabindex="-1">Create version <code>tag</code> <a class="header-anchor" href="#create-version-tag" aria-hidden="true">#</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>tag</code> should be created locally, but in some case we can use GitHub Release to create both <code>releases</code> and \`tags depend on project type.</p><p>The created <code>tag</code> must follow <a href="https://semver.org/" target="_blank" rel="noopener noreferrer"><strong>Semantic Versioning</strong></a> standard.</p></div><p><img src="`+l+`" alt="build-release-metadata"></p><details class="details custom-block"><summary>Stable version</summary><p>Given a version number <code>MAJOR.MINOR.PATCH</code>, increment the:</p><ol><li><code>MAJOR</code> version when you make <strong>incompatible API changes</strong>,</li><li><code>MINOR</code> version when you <strong>add functionality</strong> in a <strong>backwards compatible</strong> manner, and</li><li><code>PATCH</code> version when you make backwards compatible <strong>bug fixes</strong>.</li></ol></details><details class="details custom-block"><summary>Pre-release version</summary><ul><li><p>A pre-release version MAY be denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. Identifiers MUST comprise only ASCII alphanumerics and hyphens [0-9A-Za-z-].</p></li><li><p>Identifiers MUST NOT be empty. Numeric identifiers MUST NOT include leading zeroes. Pre-release versions have a lower precedence than the associated normal version. A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version. Examples: <code>1.0.0-alpha</code>, <code>1.0.0-alpha.1</code>, <code>1.0.0-0.3.7</code>, <code>1.0.0-x.7.z.92</code>, <code>1.0.0-x-y-z.\u2013</code></p></li></ul></details><p>Additional labels for pre-release and build metadata are available as extensions to the <code>MAJOR.MINOR.PATCH</code> format.</p><p>You can run the following command to create <code>tag</code> using <code>npm</code> or <code>yarn</code>, this usually the recommended way for JavaScript project.</p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">yarn version</span></span>
<span class="line"></span></code></pre></div><p><strong>Options:</strong></p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">--major                             auto-increment major version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--minor                             auto-increment minor version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--patch                             auto-increment patch version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--premajor                          auto-increment premajor version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--preminor                          auto-increment preminor version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--prepatch                          auto-increment prepatch version number</span></span>
<span class="line"><span style="color:#A6ACCD;">--prerelease                        auto-increment prerelease version number</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>Examples</strong></p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Create a major release</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn version --major</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create a minor release</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn version --minor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create a patch release</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn version --patch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create a minor + patch release</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn version --minor --patch</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Optional: Some project might have <code>bump:release</code> script in <code>package.json</code>. You can run <code>yarn bump:release</code> it the same as run <code>yarn version</code></p></blockquote><p>Read more about the <a href="https://semver.org/#semantic-versioning-specification-semver" target="_blank" rel="noopener noreferrer">Semantic Versioning Specification</a>.</p><h2 id="push-tag-to-github" tabindex="-1">Push tag to GitHub <a class="header-anchor" href="#push-tag-to-github" aria-hidden="true">#</a></h2><p>Push the <code>commit</code> and <code>tag</code> to GitHub. And wait for <strong>GitHub Action</strong> job <code>Unit test and Lint</code> to finished.</p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">git push --tag --verbose</span></span>
<span class="line"></span></code></pre></div><h2 id="create-a-release-on-github" tabindex="-1">Create a release on GitHub <a class="header-anchor" href="#create-a-release-on-github" aria-hidden="true">#</a></h2><p>After the <strong>GitHub Action</strong> job for <code>Unit test and Lint</code> to finished. You can either create a new release or update drafted release changelogs (automatically generated using <code>release-drafter</code>).</p><blockquote><p>Note: <code>Release Drafter</code> might not be available in all projects.</p></blockquote><ul><li>Wait for GitHub Actions to finish building Docker Image</li></ul><h2 id="deploy-the-application" tabindex="-1">Deploy the application <a class="header-anchor" href="#deploy-the-application" aria-hidden="true">#</a></h2><blockquote><p>Note: Deploy the application (manully or done automatically via GitHub Actions).</p></blockquote>`,37),c=[i];function p(d,h,u,m,g,y){return s(),a("div",null,c)}var v=e(r,[["render",p]]);export{f as __pageData,v as default};
